// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: _imageseries.scss
 */

$zoomer-title-font-family:          var(--#{$prefix}font-family-headings) !default;
$zoomer-title-font-weight:          var(--#{$prefix}font-weight-headings) !default;
$zoomer-title-font-size:            1.8rem !default;
$zoomer-title-line-height:          $headings-line-height !default;
$zoomer-copyright-font-size:        1.1rem !default;
$zoomer-copyright-line-height:      1.2 !default;

$pswp__root-z-index:                $above-oc-toolbar !default;

// import the photswipe distribution CSS
@import '../../plugins/photoswipe/photoswipe';

$imageseries-square-margin:         2px !default;
$imageseries-slide-border-size:     0px !default;
$imageseries-slide-border-color:    var(--#{$prefix}grey) !default;
$imageseries-slide-bgcolor:         var(--#{$prefix}grey-light) !default;

$zoom-bg:                           rgba($black, 0.5) !default;
$zoom-fg:                           $text-light !default;
$zoomer-bg:                         rgba($white, 0.6) !default;
$zoomer-fg:                         $black !default;
$zoomer-overlay-size:               35px !default;
$zoomer-icon:                       "\f002" !default; // magifying glass

// Image series base classes

.type-imageseries {
    --#{$prefix}is-square-margin:          #{$imageseries-square-margin};
    --#{$prefix}is-slide-border-size:      #{$imageseries-slide-border-size};
    --#{$prefix}is-slide-border-color:     #{$imageseries-slide-border-color};
    --#{$prefix}is-slide-bgcolor:          #{$imageseries-slide-bgcolor};

    &.element {
        .images {
            font-weight: var(--#{$prefix}font-weight-bold);
        }
    }

    > .series {
        position: relative;

        > button.btn {
            margin-top: calc(2 * var(--#{$prefix}is-square-margin));
            margin-left: var(--#{$prefix}is-square-margin);
            margin-right: var(--#{$prefix}is-square-margin);
            width: calc(100% - 2 * var(--#{$prefix}is-square-margin));
        }

        .imagedata {
            display: none;
        }
    }

    &.square-list,
    &.slide-list {
        > .series {
            margin-left: calc(-1 * var(--#{$prefix}is-square-margin));
            margin-right: calc(-1 * var(--#{$prefix}is-square-margin));

            > .images {
                --#{$prefix}sq-margin: #{var(--#{$prefix}is-square-margin)};

                margin-top: calc(-1 * var(--#{$prefix}is-square-margin));
                margin-bottom: calc(-1 * var(--#{$prefix}is-square-margin));
            }
        }
    }

    &.slide-list {
        .image-col {
            .wrapper {
                display: flex;
                height: 100%;
                width: 100%;
                position: relative;
                overflow: hidden;
                border: var(--#{$prefix}is-slide-border-size) solid var(--#{$prefix}is-slide-border-color);
                border-radius: var(--#{$prefix}image-border-radius);
            }
            .zoom-overlay {
                display: flex;
                align-items: center;
                justify-content: center;
                background-color: var(--#{$prefix}is-slide-bgcolor);
            }
            img {
                object-fit: contain;
                height: 100%;
                width: 100%;
                max-height: 100%;
                max-width: 100%;
            }
        }
    }

    &.masonry-list {
        .row.images {
            margin-bottom: 0;
        }
    }

    &.detail-page {
        > .detail-content,
        > .series {
            margin-top: var(--#{$prefix}detail-content-spacer-y);
        }
        > .detail-visual.no-info  {
            + .detail-content,
            + .series {
                margin-top: 0;
            }
        }
        &.only-series {
            > .series {
                margin-top: 0;
            }
        }
    }

    .effect-box {
        position: relative;

        .centered {
            @include image-icon-overlay;
        }
    }

    .image-col {
        .content {
            // must always set this because this may reset tile rounding
            border-radius: var(--#{$prefix}image-border-radius);
        }
        .copyright {
            @include image-copyright;
        }
    }

    .tile-col {
        display: flex;

        .zoom {
            position: relative;
            width: 100%;
        }
    }

    .btn-append {
        display: block;
        width: 100%;
    }
}

html.noscript .type-imageseries .series {

    // image series requires JavaScript
    display: none;
}

.pswp {

    --pswp-root-z-index: #{$pswp__root-z-index};
    --pswp-placeholder-bg: none;

    --#{$prefix}zoomer-title-font-family: #{$zoomer-title-font-family};
    --#{$prefix}zoomer-title-font-weight: #{$zoomer-title-font-weight};
    --#{$prefix}zoomer-title-font-size: #{$zoomer-title-font-size};
    --#{$prefix}zoomer-title-line-height: #{$zoomer-title-line-height};
    --#{$prefix}zoomer-copyright-font-size: #{$zoomer-copyright-font-size};
    --#{$prefix}zoomer-copyright-line-height: #{$zoomer-copyright-line-height};

    .pswp__caption {
        position: absolute;
        left: 50%;
        bottom: 16px;
        transform: translateX(-50%);
        width: 100vw;
        display: flex;
        justify-content: center;

        hyphens: auto;
        overflow-wrap: anywhere;
        word-break: break-word;
    }

    .caption-wrapper {
        text-align: center;
        border-radius: var(--#{$prefix}border-radius);
        max-width: calc(100% - (2 * var(--#{$prefix}ws-margin)));
        padding: calc(0.5 * var(--#{$prefix}ws-margin)) var(--#{$prefix}ws-margin);
        background-color: rgba(0, 0, 0, 0.5);
    }

    .title {
        color: #eee;
        font-family: var(--#{$prefix}zoomer-title-font-family);
        font-weight: var(--#{$prefix}zoomer-title-font-weight);
        font-size: var(--#{$prefix}zoomer-title-font-size);
        line-height: var(--#{$prefix}zoomer-title-line-height);
        text-shadow: 1px 1px 1px #000;
    }

    .copyright {
        color: #eee;
        font-size: var(--#{$prefix}zoomer-copyright-font-size);
        line-height: var(--#{$prefix}zoomer-copyright-line-height);
        text-shadow: 1px 1px 1px #000;
    }


    @include media-breakpoint-up(sm) {
        .pswp__caption {
            max-width: 90%;
        }
    }
}

// Image gallery image enter animation, used when the image gallery is displayed

.comein {
    transform: translateY(120px);
    animation: come-in 0.8s ease forwards;
    &:nth-child(even) {
        transform: translateY(150px);
        animation-duration: 1.0s; // This makes the images look staggered when entering
    }
}


@keyframes come-in {
    to { transform: translateY(0); }
}

// Zoom overlay effect used by image series as well as the 'image zoom' formatter

html.keyboard-nav a:focus .zoom-overlay .zoom-icon,
.zoom:hover .zoom-overlay .zoom-icon {
    opacity: 1;
    transform: scale(1);
    border: 0;
    box-shadow: none;
}

.zoom-overlay {
    cursor: zoom-in;
    position: relative;
    display: block;
    width: 100%;
    transition: all 0.1s ease-in-out 0s;

    .zoom-icon {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        opacity: 0;
        transform: scale(0);
        transition: all 0.4s ease-in-out 0s;
        z-index: 100;
        background-color: $zoom-bg;
        &:before {
            background: transparent;
        }
        &:after {
            background: transparent;
        }

        span {
            // trick to position the element in the center of the surrounding div
            // see http://stackoverflow.com/questions/5703552/css-center-text-horizontal-and-vertical-inside-a-div-block
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateX(-50%) translateY(-50%);
            font-size: 30px;
            color: $zoom-fg;
        }
    }
}

.square-col .zoom-overlay {
    height: 100%;
}

.zoom-overlay .zoom-icon,
.image-src-box,
.image-src-box > img {
    border-radius: var(--#{$prefix}image-border-radius);
}

.image-src-box {
    &.zoomer {
        position: relative;
        z-index: 1; // required so that floating text divs after the image are not hiding the zoom button

        > img {
            cursor: zoom-in;
        }

        &::after {
            @include icon-font();
            content: $zoomer-icon;
            @include image-icon-overlay;
        }
    }
}

a {
    .image-src-box{
        &.zoomer {
            > img {
                cursor: pointer;
            }
        }
        &::after {
            content: "";
        }
    }
}

// remove rounded corners in wide area images
.area-header.ac-full-size .h-ac,
.area-wide.area-full-row {

    .type-slider .slider-box,
    .type-slider .slide-wrapper,
    .type-slider .slide-container,
    .type-slider .image-src-box,
    .piece.full .image-src-box,
    .element.tile-col .image-src-box,
    .element.tile-col .content-box {
        border-radius: 0;
    }
    .type-slider .slide-wrapper,
    .piece.full .image-src-box,
    .element.tile-col .image-src-box {
        img {
            border-radius: 0;
        }
    }
}

.image-src-box > img {
    overflow: hidden;
}